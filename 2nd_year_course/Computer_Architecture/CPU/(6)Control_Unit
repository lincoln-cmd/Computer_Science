<제어 유니트>


제어 유니트(Control Units)
  - 명령어 코드의 해독(decode)
  - 명령어 실행에 필요한 제어 신호들의 발생


인출 사이클 마이크로 연산(3주기)
    t0: MAR <- PC
    t1: MBR <- M[MAR], PC <- PC + 1
    t2: IR <- MBR


명령어 사이클 제어
  - 마이크로명령어(microinstruction), 제어 단어(control word): 명령어 사이클의 각 주기에서 실행되는 마이크로-연산들에 대응되는 비트들로 이루어진 단어
  - 마이크로프로그램(microprogram): 마이크로 명령어들의 집합
  - 루틴(routine): CPU의 특정 기능을 수행하기 위한 마이크로 프로그램


제어 유니트의 구조
  - 명령어 해독기(instruction decoder): 명령어의 연산코드, (op코드와 oprand 중)op코드만 해독해서 루틴을 수행하기 위한 시작 주소 결정
  - 제어 주소 레지스터(control address register: CAR): 다음에 실행할 마이크로 명령어의 주소를 저장(주소는 제어 기억장치의 위치를 가리킴)
  - 제어 기억장치(control memory): 마이크로 프로그램을 저장하는 제어 유니트 내부의 기억장치
  - 제어 버퍼 레지스터(control buffer register: CBR): MBR(Memory Buffer Register)처럼 제어 기억장치로부터 읽혀진 마이크로 명령어를 일시적으로 저장하는 레지스터
  - 서브루틴 레지스터(subroutine register: SBR): 마이크로 프로그램에서 서브 루틴이 호출되는 경우, 제어 주소 레지스터(CAR)의 내용을 일시적으로 저장
  - 순서제어 모듈(sequencing module): 마이크로 명령어의 실행 순서를 결정하는 회로


CPU 명령어 세트 설계
  1. 명령어들의 종류 및 비트 패턴 정의
  2. 명령어들의 실행에 필요한 하드웨어 설계
  3. 각 명령어를 위한 실행 사이클 루틴 작성(마이크로프로그래밍)

      - 마이크로 프로그램은 CPU 설계 단계에서 확정되고, 그 후에는 변하지 않음
          -> 마이크로프로그램을 저장하는 제어 기억장치는 ROM으로 만들어져 CPU 칩 내에 포함
